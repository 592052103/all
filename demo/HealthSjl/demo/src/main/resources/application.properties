server.port=8081
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/bootdo?useUnicode=true&amp;characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.url=jdbc:mysql://localhost:3306/bootdo?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false
#spring.datasource.url=jdbc:mysql://192.168.0.101:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=HCDAdmin
#spring.datasource.password=123456
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.druid.filters=config,stat,wall,log4j
spring.datasource.druid.connection-properties=druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=true
spring.datasource.druid.filter.config.enabled=true


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

#add redis
#database index default 0
spring.redis.database=0
#redis default ip
spring.redis.host=119.3.226.206
#redis server port
spring.redis.port=6379
#redis server connection password
spring.redis.password=QWEasd5256886
#redis connection max count unlimit = -1
spring.redis.pool.max-active=200
#redis max block wait time  unlimit = -1
spring.redis.pool.max-wait =-1
#redis pool max idle connection count
spring.redis.pool.max-idle=10
#redis pool min idle connection count
spring.redis.pool.min-idle=0
#redis connnection timeout
spring.redis.timeout=1000

#add kafka
# kafka proxy address one or multi
spring.kafka.bootstrap-servers=119.3.226.206:9092
# default cousumer groupId
spring.kafka.consumer.group-id=myGroup
# default topic id
#spring.kafka.template.default-topic= my-replicated-topic
spring.kafka.template.default-topic=testB
# listener in container Thread count used to resolve highlyConcurrent
spring.kafka.listener.concurrency=3
# batch send message count
spring.kafka.producer.batch-size=1000
#key-value serialize and deserialized
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteBufferDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.producer.buffer-memory=524288

#CharSet Code UTF8
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

#LogBack config
logging.path=F:\\program\\project\\DEMO\\demo\\log
logging.file=demo.log
logging.level.root=INFO
logging.level.com.jackie.springbootdemo.config=WARN
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n 
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n

mybatis.mapperLocations=classpath:mapper/*.xml
spring.thymeleaf.cache=false  

# set session invalid time
#server.servlet.session.timeout = 1